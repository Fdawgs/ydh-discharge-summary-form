"use strict";function asyncGeneratorStep(a,b,c,d,e,f,g){try{var h=a[f](g),i=h.value}catch(a){return void c(a)}h.done?b(i):Promise.resolve(i).then(d,e)}function _asyncToGenerator(a){return function(){var b=this,c=arguments;return new Promise(function(d,e){function f(a){asyncGeneratorStep(h,d,e,f,g,"next",a)}function g(a){asyncGeneratorStep(h,d,e,f,g,"throw",a)}var h=a.apply(b,c);f(void 0)})}}function _typeof(a){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}var fhirAllergyIntoleranceMiddleware=require("./fhir-allergyintolerance.middleware"),_require=require("../../test.config"),fhirConConfig=_require.fhirConConfig;require("regenerator-runtime"),describe("FHIR AllergyIntolerance middleware",function(){beforeAll(function(){jest.setTimeout(3e4)}),test("Should return a middleware function",function(){var a=fhirAllergyIntoleranceMiddleware();expect(_typeof(a)).toBe("function")}),test("Should populate allergies req custom parameter if params populated correctly",/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function a(){var b,c,d,e;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return b=fhirAllergyIntoleranceMiddleware(fhirConConfig),c={customparams:{admission_date:"2000-01-01",discharge_date:"2019-12-31",patient_mrn:"5484125"// test patient with many allergies
}},d={},e=jest.fn(),a.next=6,b(c,d,e);case 6:expect(_typeof(c.customparams.allergies)).toBe("object"),expect(e).toHaveBeenCalledTimes(1);case 8:case"end":return a.stop();}},a)}))),test("Should continue if patient has no recorded allergies",/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function a(){var b,c,d,e;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return b=fhirAllergyIntoleranceMiddleware(fhirConConfig),c={customparams:{admission_date:"2000-01-01",discharge_date:"2019-12-31",patient_mrn:"008017610"// test patient with no allergies
}},d={},e=jest.fn(),a.next=6,b(c,d,e);case 6:expect(c.customparams.allergies).toBeUndefined(),expect(e).toHaveBeenCalledTimes(1);case 8:case"end":return a.stop();}},a)}))),test("Should fail to populate allergies req custom parameter if date params are missing",/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function a(){var b,c,d,e;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return b=fhirAllergyIntoleranceMiddleware(fhirConConfig),c={customparams:{admission_date:"",discharge_date:"",patient_mrn:"5484125"}},d={},e=jest.fn(),a.next=6,b(c,d,e);case 6:expect(_typeof(c.customparams.allergies)).not.toBe("object"),expect(e).toHaveBeenCalledTimes(1);case 8:case"end":return a.stop();}},a)}))),test("Should fail to populate allergies req custom parameter if params are malformed",/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function a(){var b,c,d,e;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return b=fhirAllergyIntoleranceMiddleware(fhirConConfig),c={customparams:{admission_date:"geter",discharge_date:"le2019-01-01",patient_mrn:"5484125"}},d={},e=jest.fn(),a.next=6,b(c,d,e);case 6:expect(_typeof(c.customparams.allergies)).not.toBe("object"),expect(e).toHaveBeenCalledTimes(1);case 8:case"end":return a.stop();}},a)}))),test("Should fail to populate allergies req custom parameter if mrn param is missing",/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function a(){var b,c,d,e;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return b=fhirAllergyIntoleranceMiddleware(fhirConConfig),c={customparams:{admission_date:"",discharge_date:"",patient_mrn:""}},d={},e=jest.fn(),a.next=6,b(c,d,e);case 6:expect(_typeof(c.customparams.allergies)).not.toBe("object"),expect(e).toHaveBeenCalledTimes(1);case 8:case"end":return a.stop();}},a)})))});